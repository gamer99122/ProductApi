// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductApi.Data;

#nullable disable

namespace ProductApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductApi.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 6, 10, 23, 37, 40, 512, DateTimeKind.Local).AddTicks(9857),
                            Description = "高效能筆記型電腦",
                            IsActive = true,
                            Name = "筆記型電腦",
                            Price = 25000m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 6, 10, 23, 37, 40, 514, DateTimeKind.Local).AddTicks(453),
                            Description = "無線光學滑鼠",
                            IsActive = true,
                            Name = "滑鼠",
                            Price = 500m,
                            Stock = 50
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 6, 10, 23, 37, 40, 514, DateTimeKind.Local).AddTicks(463),
                            Description = "機械式鍵盤",
                            IsActive = true,
                            Name = "鍵盤",
                            Price = 1200m,
                            Stock = 30
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
